material Practica2/Bomb {
    technique {
        pass {
            diffuse 1 1 1
            texture_unit {
                texture checker.png
            }
        }
    }
}
//_______________________________BOMBA TESELEADA____________________________________________
//nombre para el shader
vertex_program BombaTeseladaVS glsl  {
    // nombre del archivo del código
    source BombaTeseladaVS.glsl 
    // valores para las variable uniform
    default_params 
    {
        param_named_auto modelViewProjMat worldviewproj_matrix
    }
}
//nombre para el shader
fragment_program BombaTeseladaFS glsl  {
    // nombre del archivo del código
    source BombaTeseladaFS.glsl 
    // valores para las variable uniform
    default_params {
        // 1º unidad de textura ‐> 
        param_named texturaL int 0
        // 2º unidad de textura ‐> *
        param_named texturaM int 1
        param_named texturaK int 2 
    }
}

material Practica2/BombaTeseleada {  
    technique {
        pass { 
            vertex_program_ref BombaTeseladaVS {  // params ‐> default_params
            
            } 
            fragment_program_ref BombaTeseladaFS {  // params ‐> default_params
            
            }
            texture_unit { //0
                // archivo
                texture checker.png 2d 
            }
            texture_unit { // 1
                texture BumpyMetal.jpg 2d
            } 
            texture_unit { // 2
                texture spaceSky.jpg 2d
            }
        }  
    }  
}
//_______________________________SPACESKY____________________________________________
//nombre para el shader
vertex_program SpaceSkyVS glsl  {
    source SpaceSkyVS.glsl 
    default_params {
        param_named_auto modelViewProjMat worldviewproj_matrix
    }
}
//nombre para el shader
fragment_program SpaceSkyFS glsl  {
    source SpaceSkyFS.glsl 
    default_params {
        param_named texturaLight int 0
        param_named texturaAlbedo int 1
    }
}

material Practica2/SpaceSky {  
    technique {
        pass { 
            vertex_program_ref SpaceSkyVS {  // params ‐> default_params
            
            } 
            fragment_program_ref SpaceSkyFS {  // params ‐> default_params
            
            }
            texture_unit { //0
                texture lightMap.jpg 2d 
            }
            texture_unit { // 1
                texture spaceSky.jpg 2d
            } 
        }  
    }  
}
//_______________________________SPACE ANIM____________________________________________
vertex_program SpaceVS glsl  {
    source SpaceVS.glsl 
    default_params {
        param_named_auto modelViewProjMat worldviewproj_matrix
        // param_named_auto st time_0_1 5
        param_named_auto st sintime_0_2pi 5
        // param_named_auto st 0.4
    }
}
//nombre para el shader
fragment_program SpaceFS glsl  {
    source SpaceFS.glsl 
    default_params {
        param_named texturaLight int 0
        param_named texturaAlbedo int 1
    }
}

material Practica2/SpaceAnim {  
    technique {
        pass { 
            vertex_program_ref SpaceVS {  // params ‐> default_params
            
            } 
            fragment_program_ref SpaceFS {  // params ‐> default_params
            
            }
            texture_unit { //0
                texture lightMap.jpg 2d 
            }
            texture_unit { // 1
                texture spaceSky.jpg 2d
            } 
        }  
    }  
}
//_______________________________HOLES____________________________________________
fragment_program HolesFS glsl  {
    source HolesFS.glsl 
    default_params {
        param_named texturaCorrosion int 0
        param_named texturaRiverBack int 1
        param_named texturaMetalFront int 2
    }
}

material Practica2/BombHoles {  
    technique {
        pass { 
            cull_software none
            cull_hardware none
            vertex_program_ref BombaTeseladaVS {  //Reutilizamos el de la bomba
            
            } 
            fragment_program_ref HolesFS {              
            }
            texture_unit { //0
                texture corrosion.jpg 2d 
            }
            texture_unit { // 1
                texture BeachStones.jpg 2d
            } 
            texture_unit { // 2
                texture BumpyMetal.jpg 2d
            }
        }  
    }  
}
//_______________________________HOLES ILUMINATED____________________________________________
vertex_program HolesAndLightingVS glsl  {
    source HolesAndLightingVS.glsl 
    default_params {
        param_named_auto modelViewProjMat worldviewproj_matrix
        //coordenadas mundiales
        param_named_auto normalMat inverse_transpose_world_matrix 
    }
}

fragment_program HolesAndLightingFS glsl  {
    source HolesAndLightingFS.glsl 
    default_params {
        param_named texturaCorrosion int 0
        param_named texturaRiverBack int 1
        param_named texturaMetalFront int 2

        param_named colorBack float3 0.0 0.6 0.83
        param_named colorFront float3 0.72 0.57 0.35

        // el auto es para parametros que van cambiando a la largo de la ejecucion 
        param_named_auto lightPos light_position 0 
        param_named_auto intLuz light_diffuse_colour 0
    }
}

material Practica2/BombHolesLight {  
    technique {
        pass { 
            cull_software none
            cull_hardware none
            vertex_program_ref HolesAndLightingVS {  //Reutilizamos el de la bomba
            
            } 
            fragment_program_ref HolesAndLightingFS {              
            }
            texture_unit { //0
                texture corrosion.jpg 2d 
            }
            texture_unit { // 1
                texture BeachStones.jpg 2d
            } 
            texture_unit { // 2
                texture BumpyMetal.jpg 2d
            }
        }  
    }  
}
